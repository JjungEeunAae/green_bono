--------------------------------------------------------
--  파일이 생성됨 - 목요일-3월-14-2024   
--------------------------------------------------------
DROP SEQUENCE "BONO"."ELF";
DROP SEQUENCE "BONO"."RE";
DROP SEQUENCE "BONO"."SD";
DROP TABLE "BONO"."GROUP_";
DROP TABLE "BONO"."GROUP_DETAIL";
DROP TABLE "BONO"."MEMBER";
DROP TABLE "BONO"."REQUEST";
DROP TABLE "BONO"."WORD";
--------------------------------------------------------
--  DDL for Sequence ELF
--------------------------------------------------------

   CREATE SEQUENCE  "BONO"."ELF"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 44 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RE
--------------------------------------------------------

   CREATE SEQUENCE  "BONO"."RE"  MINVALUE 6 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 102 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SD
--------------------------------------------------------

   CREATE SEQUENCE  "BONO"."SD"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 16 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table GROUP_
--------------------------------------------------------

  CREATE TABLE "BONO"."GROUP_" 
   (	"GROUP_NO" VARCHAR2(200 BYTE), 
	"GROUP_NAME" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table GROUP_DETAIL
--------------------------------------------------------

  CREATE TABLE "BONO"."GROUP_DETAIL" 
   (	"GROUP_DETAIL_NO" VARCHAR2(200 BYTE), 
	"GROUP_DETAIL_NAME" VARCHAR2(200 BYTE), 
	"GROUP_NO" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table MEMBER
--------------------------------------------------------

  CREATE TABLE "BONO"."MEMBER" 
   (	"ID" VARCHAR2(200 BYTE), 
	"PW" VARCHAR2(200 BYTE), 
	"NAME" VARCHAR2(200 BYTE), 
	"ROLE" VARCHAR2(200 BYTE), 
	"RESIGN" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table REQUEST
--------------------------------------------------------

  CREATE TABLE "BONO"."REQUEST" 
   (	"REQUEST_NO" VARCHAR2(200 BYTE), 
	"PROCESS_DIVISION" VARCHAR2(200 BYTE), 
	"WORD_NO" VARCHAR2(200 BYTE), 
	"REQUEST_DATE" VARCHAR2(200 BYTE), 
	"REASON" VARCHAR2(200 BYTE), 
	"ID" VARCHAR2(200 BYTE), 
	"REQUEST_DIVISION" VARCHAR2(200 BYTE), 
	"REQUEST_CONTENT" VARCHAR2(200 BYTE), 
	"REQUEST_RYN" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table WORD
--------------------------------------------------------

  CREATE TABLE "BONO"."WORD" 
   (	"WORD_NO" VARCHAR2(200 BYTE), 
	"WORD" VARCHAR2(300 BYTE), 
	"WORD_MEAN" VARCHAR2(300 BYTE), 
	"INSERT_DATE" DATE, 
	"DELETE_YN" VARCHAR2(200 BYTE), 
	"CATEGORY" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into BONO.GROUP_
SET DEFINE OFF;
Insert into BONO.GROUP_ (GROUP_NO,GROUP_NAME) values ('CT','자격증 종류');
Insert into BONO.GROUP_ (GROUP_NO,GROUP_NAME) values ('RYN','여부');
Insert into BONO.GROUP_ (GROUP_NO,GROUP_NAME) values ('RL','권한');
Insert into BONO.GROUP_ (GROUP_NO,GROUP_NAME) values ('RR','거절사유');
Insert into BONO.GROUP_ (GROUP_NO,GROUP_NAME) values ('CG','카테고리');
Insert into BONO.GROUP_ (GROUP_NO,GROUP_NAME) values ('RQ','요청');
Insert into BONO.GROUP_ (GROUP_NO,GROUP_NAME) values ('RC','요청분류');
REM INSERTING into BONO.GROUP_DETAIL
SET DEFINE OFF;
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('CT1','정보처리기사','CT');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('CT2','SQLD','CT');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('Y','그러하다','RYN');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('R','~중이다','RYN');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('N','그러하지 않다','RYN');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('USER','사용자','RL');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('ADMIN','관리자','RL');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('RR1','용어 부적격','RR');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('RR2','정의 부적격','RR');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('RR3','중복된 용어','RR');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('RR4','중복된 정의','RR');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('RR5','카테고리 부적격','RR');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('CT1_CG1','소프트웨어 설계','CG');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('CT1_CG2','소프트웨어 개발','CG');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('CT1_CG3','데이터베이스 구축','CG');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('CT1_CG4','프로그래밍 언어활용','CG');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('CT1_CG5','정보시스템 구축관리','CG');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('CT2_CG1','데이터모델링의 이해','CG');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('CT2_CG2','SQL 기본 및 활용','CG');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('UPDATE','수정','RQ');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('DELETE','삭제','RQ');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('RC1','용어','RC');
Insert into BONO.GROUP_DETAIL (GROUP_DETAIL_NO,GROUP_DETAIL_NAME,GROUP_NO) values ('RC2','정의','RC');
REM INSERTING into BONO.MEMBER
SET DEFINE OFF;
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('admin','admin','관리자','ADMIN','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('yyy','1234','유저','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('test','1111','name','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('green','2222','haha','USER','Y');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('bonobono','test','hoho','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('pporori','test1234','ral','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('qwe','asd','qqq','USER','Y');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('eunAe','eunae','응애','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('eunJae','eunjae','eunjae','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('test1','test','테스트','USER','Y');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('hoho','1234','하하','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('yyy12','wer','erw','USER','Y');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('yyy123','123','ss','USER','Y');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('sdf','wer','sdf','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('yyy11','1234','1234','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('yyyqq','wer','wer','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('gayoung','zzang','gayoung','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('ksm123','123123','Soomini','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('hello','hello','하이루','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('hhh','hhh','hhh','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('tttt','tttt','tttt','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('uuu','uuu','uuu','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('qqqq','qqqq','qqqq','USER','N');
Insert into BONO.MEMBER (ID,PW,NAME,ROLE,RESIGN) values ('eeee','eeee','eeee','USER','N');
REM INSERTING into BONO.REQUEST
SET DEFINE OFF;
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE63','DELETE','ELF59','24/03/09',null,'yyy','RC1','테스트','R');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE64','UPDATE','SD35','24/03/09',null,'eunJae','RC2','정진조는 너무 귀여워....','Y');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE65','DELETE','SD35','24/03/09',null,'eunJae','RC1','당장 삭제 부탁드립니다.','R');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE66','UPDATE','ELF14','24/03/09','RR2','yyy','RC2','정보보안의 3대 요소는 기밀성, 무결성 그리고 가영성입니다','N');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE67','DELETE','ELF59','24/03/09',null,'eunAe','RC1','지울꼬야','R');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE68','DELETE','ELF58','24/03/09',null,'eunAe','RC1','집에가영','Y');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE69','DELETE','ELF6','24/03/13',null,'yyy','RC1','이거 삭제바람','r');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE70','UPDATE','SD35','24/03/13',null,'yyy','RC2','귀여웡....','Y');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE71','DELETE','ELF1','24/03/13','RR2','yyy','RC1','테스트에요 삭제하면안대','N');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE72','UPDATE','SD35','24/03/13','RR2','yyy','RC2','조정진이다','N');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE73','DELETE','ELF6','24/03/13',null,'yyy','RC1','ㅌㅅㅌ','r');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE74','UPDATE','SD37','24/03/13',null,'yyy','RC2','오홍?','Y');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE75','UPDATE','SD1','24/03/13',null,'hhh','RC1','ㅌㅅㅌ','r');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE76','UPDATE','SD9','24/03/13',null,'yyy','RC2','우리조 짱이다 로 바꿔주세요','r');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE77','DELETE','SD37','24/03/13',null,'yyy','RC1','이거 당연한 거 아님?','r');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE78','UPDATE','ELF6','24/03/13','RR2','tttt','RC2','ㅌㅅㅌ','N');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE61','UPDATE','ELF58','24/03/09',null,'green','RC2','화장실 쟁이임!!!! ','R');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE79','DELETE','ELF14','24/03/13',null,'tttt','RC1','플립즈','r');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE80','UPDATE','ELF6','24/03/13',null,'qqqq','RC2','ㅁ낭;ㅣ','Y');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE81','DELETE','SD37','24/03/13',null,'qqqq','RC1','허ㅗ','Y');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE82','UPDATE','ELF6','24/03/14',null,'eeee','RC1','뭘보노?','Y');
Insert into BONO.REQUEST (REQUEST_NO,PROCESS_DIVISION,WORD_NO,REQUEST_DATE,REASON,ID,REQUEST_DIVISION,REQUEST_CONTENT,REQUEST_RYN) values ('RE62','DELETE','ELF57','24/03/09',null,'green','RC1','필요없는거 같은니 삭제 바람.','R');
REM INSERTING into BONO.WORD
SET DEFINE OFF;
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF1','팬인','어떤 모듈을 제어(호출)하는 모듈의 수',to_date('24/03/02','RR/MM/DD'),'N','CT1_CG1');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF2','팬아웃','어떤 모듈을 의해 제어(호출)되는 모듈의 수',to_date('24/03/02','RR/MM/DD'),'N','CT1_CG1');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF3','생성패턴','추상 팩토리(Abstract Factory), 빌더(Builder), 팩토리 메소드(Factory Method), 
프로토타입(Prototype), 싱글톤(Singleton)',to_date('24/03/02','RR/MM/DD'),'N','CT1_CG1');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF4','구조패턴','어댑터(Adapter), 브리지(Bridge), 컴포지트(Composite), 데코레이터(Decorator), 
퍼싸드(Facade), 플라이웨이트(Flyweight), 프록시(Proxy)',to_date('24/03/02','RR/MM/DD'),'N','CT1_CG1');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF5','행위패턴','책임 연쇄(Chain of Responsibility), 커맨드(Command), 인터프리터(Interpreter), 
반복자(Iterator), 중재자(Mediator), 메멘토(Memento), 옵서버(Observer), 상태(state), 
전략(Strategy), 템플릿 메소드(Templete Method), 방문자(Visitor)',to_date('24/03/02','RR/MM/DD'),'N','CT1_CG1');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF6','강도(Stress)테스트','시스템에 과도한 정보량이나 빈도 등을 부과하여 과부화시에도 소프트웨어가 
정상적으로 실행되는지를 확인하는 테스트이다.',to_date('24/03/02','RR/MM/DD'),'N','CT1_CG2');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF7','화이트박스 테스트 종류','기초 경로 검사, 제어 구조 검사(조건 검사, 루프 검사, 데이터 흐름 검사)',to_date('24/03/02','RR/MM/DD'),'N','CT1_CG2');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF8','블색박스 테스트 종류','동치 분할 검사, 경계값 분석, 원인-효과 그래프 검사, 오류 예측 검사, 비교 검사',to_date('24/03/02','RR/MM/DD'),'N','CT1_CG2');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF9','단위 테스트(Unit Test)','코딩 직후 소프트웨어 설계의 최소 단위인 모듈이나 컴포넌트에 초점을 맞춰 
테스트하는 것이다.',to_date('24/03/02','RR/MM/DD'),'N','CT1_CG2');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF10','트랜잭션','영속성(Durablility) ,일관성(Consistency) ,원자성(Atomicity), 격리성(Isolation)',to_date('24/03/02','RR/MM/DD'),'N','CT1_CG3');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF11','참조 무결성','CASCADE, RESTRICTED, SET NULL, SET DEFAULT',to_date('24/03/02','RR/MM/DD'),'N','CT1_CG3');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF12','DDL','CREATE, ALTER, DROP',to_date('24/03/02','RR/MM/DD'),'N','CT1_CG3');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF13','응집도','기능(Functional) > 순차(Sequential) > 교환(Communication) > 절차(Procedural) > 시간(Temporal) > 논리(Logical) > 우연(Coincidental)',to_date('24/03/02','RR/MM/DD'),'N','CT1_CG4');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF14','정보보안의 3대 요소','기밀성, 무결성, 가용성',to_date('24/03/02','RR/MM/DD'),'N','CT1_CG5');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('SD1','데이터 모델링의 중요성 및 유의점','파급효과, 간결한 표현, 데이터 품질',to_date('24/03/02','RR/MM/DD'),'N','CT2_CG1');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('SD2','데이터 모델링의 3단계','1. 개념적 데이터 모델링 
2. Key, 속성, 관계 등을 정확하게 표현, 재사용성이 높다. 
3. 물리적 데이터 모델링',to_date('24/03/02','RR/MM/DD'),'N','CT2_CG1');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('SD3','엔티티 구성방식에 따른 분류','PK 속성, FK 속성, 일반속성',to_date('24/03/02','RR/MM/DD'),'N','CT2_CG1');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('SD4','모델링의 설명','복잡한 현실세계를 단순화시켜 표현하는 것을 말한다.',to_date('24/03/02','RR/MM/DD'),'N','CT2_CG1');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('SD5','모델링의 특징','추상화, 단순화, 명확화',to_date('24/03/02','RR/MM/DD'),'N','CT2_CG1');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('SD6','INNER JOIN','JOIN 조건에서 동일한 값이 있는 행만 반환, USING이나 ON 절을 필수적으로 사용',to_date('24/03/02','RR/MM/DD'),'N','CT2_CG2');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('SD7','NATURAL JOIN','두 테이블 간의 동일한 이름을 갖는 모든 칼럼들에 대해 EQUI JOIN 수행',to_date('24/03/02','RR/MM/DD'),'N','CT2_CG2');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('SD8','EQUAL JOIN ','EQUAL JOIN은 두 개의 테이블 간에 컬럼 값이 일치하는 걸 조인,  두 개의 테이블에서 교집합을 찾음',to_date('24/03/02','RR/MM/DD'),'N','CT2_CG2');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('SD9','NON EQUAL JOIN','NON EQUAL JOIN은 <, >, <=, >=을 사용',to_date('24/03/02','RR/MM/DD'),'N','CT2_CG2');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('SD10','SELF JOIN','한 테이블에서 두 개의 컬럼이 연관 관계를 가지고 있는 경우에 사용',to_date('24/03/02','RR/MM/DD'),'N','CT2_CG2');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('SD11','CROSS JOIN','양쪽 집합의 M*N건의 데이터 조합이 발생',to_date('24/03/02','RR/MM/DD'),'N','CT2_CG2');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('SD15','정진조는....','귀여웡....',to_date('24/03/09','RR/MM/DD'),'N','CT2_CG2');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF20','미니 프로젝트2','c#과 visual studio 를 이용하여 코드를 이해하고 동적 로직을 이해해 보자',to_date('24/03/11','RR/MM/DD'),'N','CT1_CG4');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF24','하이루','방가방가',to_date('24/03/14','RR/MM/DD'),'N','CT1_CG1');
Insert into BONO.WORD (WORD_NO,WORD,WORD_MEAN,INSERT_DATE,DELETE_YN,CATEGORY) values ('ELF23','가영오디가영','화장실 쟁이',to_date('24/03/09','RR/MM/DD'),'Y','CT1_CG1');
--------------------------------------------------------
--  DDL for Index GROUP_DETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BONO"."GROUP_DETAIL_PK" ON "BONO"."GROUP_DETAIL" ("GROUP_DETAIL_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index GROUP__PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BONO"."GROUP__PK" ON "BONO"."GROUP_" ("GROUP_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index MEMBER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BONO"."MEMBER_PK" ON "BONO"."MEMBER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index REQUEST_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BONO"."REQUEST_PK" ON "BONO"."REQUEST" ("REQUEST_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index WORD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BONO"."WORD_PK" ON "BONO"."WORD" ("WORD_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index GROUP__PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BONO"."GROUP__PK" ON "BONO"."GROUP_" ("GROUP_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index GROUP_DETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BONO"."GROUP_DETAIL_PK" ON "BONO"."GROUP_DETAIL" ("GROUP_DETAIL_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index MEMBER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BONO"."MEMBER_PK" ON "BONO"."MEMBER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index REQUEST_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BONO"."REQUEST_PK" ON "BONO"."REQUEST" ("REQUEST_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index WORD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BONO"."WORD_PK" ON "BONO"."WORD" ("WORD_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  Constraints for Table GROUP_
--------------------------------------------------------

  ALTER TABLE "BONO"."GROUP_" ADD CONSTRAINT "GROUP__PK" PRIMARY KEY ("GROUP_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BONO"."GROUP_" MODIFY ("GROUP_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GROUP_DETAIL
--------------------------------------------------------

  ALTER TABLE "BONO"."GROUP_DETAIL" ADD CONSTRAINT "GROUP_DETAIL_PK" PRIMARY KEY ("GROUP_DETAIL_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BONO"."GROUP_DETAIL" MODIFY ("GROUP_DETAIL_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MEMBER
--------------------------------------------------------

  ALTER TABLE "BONO"."MEMBER" ADD CONSTRAINT "MEMBER_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BONO"."MEMBER" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REQUEST
--------------------------------------------------------

  ALTER TABLE "BONO"."REQUEST" ADD CONSTRAINT "REQUEST_PK" PRIMARY KEY ("REQUEST_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BONO"."REQUEST" MODIFY ("REQUEST_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table WORD
--------------------------------------------------------

  ALTER TABLE "BONO"."WORD" ADD CONSTRAINT "WORD_PK" PRIMARY KEY ("WORD_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BONO"."WORD" MODIFY ("WORD_NO" NOT NULL ENABLE);
